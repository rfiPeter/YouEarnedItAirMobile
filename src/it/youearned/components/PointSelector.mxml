<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="50" click="onUpdatePoints(event)">
	<fx:Script>
		<![CDATA[
			import it.youearned.model.AppModel;
			import it.youearned.utils.AssetUtil;
			
			import mx.events.FlexEvent;
			
			import spark.events.TextOperationEvent;
			
			[Bindable]
			private var _points:int = 0;
			public function get points():int
			{
				return _points;
			}
			
			protected function onSetPoints(event:FlexEvent):void
			{
				updatePoints();
			}
			
			protected function doneSettingPoints(event:FocusEvent):void
			{
				updatePoints();
			}
			
			private function updatePoints():void
			{
				_points = Number(pointsToGive.text);
				currentState = "selected";
				
				dispatchEvent(new Event(Event.COMPLETE));
			}
			
			protected function onUpdatePoints(event:MouseEvent):void
			{
				if (currentState == "selecting")
					return;
				currentState = "selecting";
				pointsToGive.text = _points.toString();
				pointsLeftToGive = model.me.points_to_give - _points;
			}
			
			protected function onPointsUpdate(event:TextOperationEvent):void
			{
				var n:Number = Number(pointsToGive.text);			
				var newTotal:Number = model.me.points_to_give - n;
				
				if (newTotal < 0) {
					pointsToGive.text = model.me.points_to_give.toString();
//					dispatchEvent(new ErrorEvent(ErrorEvent.ERROR,false,false,"Not enough points"));
				}
				else {
					pointsLeftToGive = newTotal;
				}
				
			}
			private var model:AppModel = AppModel.getInstance();
			
			[Bindable]
			private var pointsLeftToGive:int = model.me.points_to_give;
			
			
			public function clear():void
			{
				pointsToGive.text = "";
			}
		]]>
	</fx:Script>
	
	<fx:Metadata>
		[Event(name="complete", type="flash.events.Event")]
		[Event(name="error", type="flash.events.ErrorEvent")]
	</fx:Metadata>
	
	<s:states>
		<s:State name="selecting" />
		<s:State name="selected" />
	</s:states>
	
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xf1f1f1"/>
				<s:GradientEntry color="0xcccccc"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Label left="10" text="Points:" verticalCenter="0"/>
	<s:TextInput id="pointsToGive" includeIn="selecting" left="106" contentBackgroundColor="0xffffff" width="65" verticalCenter="0" softKeyboardType="number" restrict="0-9" enter="onSetPoints(event)" focusOut="doneSettingPoints(event)" change="onPointsUpdate(event)"/>
	<s:Label includeIn="selecting" left="180" text="{pointsLeftToGive}pts available" verticalCenter="0"/>
	
	<s:Label includeIn="selected" left="106" text="{_points}" verticalCenter="0" />
	<s:Image left="67" width="31" height="31" smooth="true"
			 source="{LayoutImages.GrayStar}" verticalCenter="-1"/>
	
</s:Group>
