<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		width="100%" height="100%" actionBarVisible="false"
		skinClass="it.youearned.skins.MenuComponentSkin" tabBarVisible="false" viewActivate="init(event)">
	<s:layout>
		<s:VerticalLayout gap="1" />
	</s:layout>
	<fx:Script>
		<![CDATA[
			import spark.transitions.ViewTransitionBase;
			
			import it.youearned.events.LoadUserActivityEvent;
			import it.youearned.events.LogoutEvent;
			import it.youearned.events.ToggleMenuEvent;
			import it.youearned.events.UpdateViewEvent;
			import it.youearned.model.AppModel;
			import it.youearned.presenters.BasePresenter;
			import it.youearned.views.UserProfileView;
			
			[Bindable]
			private var model:AppModel = AppModel.getInstance(); 
			
			private var presenter:BasePresenter = model.getPresenter(BasePresenter) as BasePresenter;
			
			private function init(event:Event):void
			{
				if(model.deviceType == "phone") {
					this.addEventListener(TransformGestureEvent.GESTURE_SWIPE, swipeNavigate);
				}
			}
			
			protected function gotoMyProfile(event:MouseEvent):void
			{
				model.mainNavigator.enabled = true;
				new LoadUserActivityEvent(model.me.id).dispatch();
				model.mainNavigator.popAll();
				model.mainNavigator.pushView(views.UserProfileNew);
				//
				//new UpdateViewEvent(UpdateViewEvent.PUSH_VIEW, UserProfileView, null, {type:"slide",direction:"left"}).dispatch();
			}
			
			protected function gotoActivity(event:MouseEvent):void
			{
				model.mainNavigator.enabled = true;
				model.mainNavigator.popAll();
				model.mainNavigator.pushView(views.ActivityMain);
				//new UpdateViewEvent(UpdateViewEvent.PUSH_VIEW, ActivityView, null, {type:"slide",direction:"left"}).dispatch();
			}
			
			protected function gotoRewards(event:MouseEvent):void
			{
				trace('gotoRewards');
			}
			
			protected function gotoSettings(event:MouseEvent):void
			{
				trace('gotoSettings');
			}
			
			protected function doLogout(event:MouseEvent):void
			{
				model.mainNavigator.enabled = true;
				
				presenter.toggleMenu(new ToggleMenuEvent(false), true);				
			}
			
			private function swipeNavigate(swipe:TransformGestureEvent):void
			{
				// TODO Auto Generated method stub
				
				if (swipe.offsetX == -1 ) {
					presenter.toggleMenu(new ToggleMenuEvent(false));
				}
			}
			
		]]>
	</fx:Script>
	
	
		<s:Button skinClass="it.youearned.skins.MenuComponentButton" width="262"  label="{model.me.first_name} {model.me.last_name}" icon="{model.me.picture}/small" click="gotoMyProfile(event)"/>
		
	
	<s:Group width="262" height="73">
		<s:Rect width="100%" height="20">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xebebeb"/>
					<s:GradientEntry color="0xd9d9d9"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		<s:Rect width="100%" height="53" top="20">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xffffff"/>
					<s:GradientEntry color="0xebebeb"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>	
		<s:Rect width="2" height="100%" left="136">
			<s:fill>
				<s:SolidColor color="0xdadada"/>
			</s:fill>
		</s:Rect>
		<s:Label left="10" top="4" fontSize="12" styleName="DarkGrayTextStyle" text="Points to Give"/>
		<s:Label left="140" top="4" fontSize="12" styleName="DarkGrayTextStyle"
				 text="Points to Redeem"/>
		<s:Image left="10" top="31" width="31" height="31" smooth="true"
				 source="{LayoutImages.GrayStar}"/>
		<s:Image left="142" top="31" width="31" height="31" smooth="true"
				 source="{LayoutImages.GreenStar}"/>
		<s:Label left="46" top="41" fontSize="12" fontWeight="bold" styleName="DarkGrayTextStyle"
				 text="{model.me.points_to_give}"/>
		<s:Label left="177" top="41" fontSize="12" fontWeight="bold" styleName="GreenTextStyle"
				 text="{model.me.points_to_redeem}"/>
	</s:Group>
	<s:Button skinClass="it.youearned.skins.MenuComponentButton" width="262" label="Activity Feed" icon="{LayoutImages.WhiteStar}" click="gotoActivity(event)"/>

	
	<s:Button skinClass="it.youearned.skins.MenuComponentButton" width="262" label="Sign Out" icon="{LayoutImages.SignOut}" click="doLogout(event)"/>
	
	
</s:View>
